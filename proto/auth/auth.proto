syntax = "proto3";

package authpb;

option go_package = "/auth";

// Request and Response messages for Login
message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  int32 expired_in = 2;
}

// Request and Response messages for Register
message RegisterRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string avatar = 5;
}

message RegisterResponse {
  bool success = 1;
}

// Existing Introspect messages
message IntrospectReq {
  string access_token = 1;
}

message IntrospectResp {
  string tid = 1;
  string sub = 2;
}

// AuthService definition
service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc IntrospectToken(IntrospectReq) returns (IntrospectResp);
}

// make auth_proto
// cd proto && protoc -I . --go_out gen --go_opt paths=source_relative --go-grpc_out gen --go-grpc_opt paths=source_relative,require_unimplemented_servers=false auth.proto && cd ..